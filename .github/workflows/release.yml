name: Release osxcross

on:
  workflow_dispatch:

jobs:
  package_sdks:
    uses: ./.github/workflows/sdk.yml
    strategy:
      fail-fast: false
      matrix:
        macos_version: [12, 13, 14]
    with:
      macos_version: ${{ matrix.macos_version }}

  collect_sdks:
    name: Collect SDKs
    runs-on: ubuntu-latest
    needs: package_sdks
    outputs:
      SDK_VERSIONS: ${{ steps.get_all_sdk_versions.outputs.result }}
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get_release_version
        run: |
          echo "RELEASE_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Get all SDK Versions
        id: get_all_sdk_versions
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('npm install @actions/artifact')
            const { DefaultArtifactClient } = require('@actions/artifact');
            const artifact = new DefaultArtifactClient();
            const sdks = await artifact.listArtifacts();
            const sdk_versions = sdks.artifacts.map(sdk => sdk.name);
            return sdk_versions;

  build_osxcross:
    name: Build osxcross
    runs-on: ubuntu-latest
    needs:
      - collect_sdks
    strategy:
      fail-fast: false
      matrix:
        sdk_versions: ${{ fromJSON(needs.collect_sdks.outputs.SDK_VERSIONS) }}
    steps:
      - uses: actions/checkout@v4

      - name: Download SDK
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.sdk_versions }}
          path: tarballs

      - name: Build osxcross
        uses: uraimo/run-on-arch-action@v2
        id: build
        with:
          arch: none
          distro: none
          base_image: amd64/ubuntu:24.04
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/osxcross"
          shell: /bin/bash
          install: |
            apt-get update && apt-get install -y \
              curl \
              clang \
              make \
              cmake \
              git \
              patch \
              python3 \
              libssl-dev \
              lzma-dev \
              libxml2-dev \
              xz-utils \
              bzip2 \
              cpio \
              bzip2 \
              zlib1g-dev \
              bash \
              llvm-dev \
              uuid-dev
          run: |
            cd /osxcross
            sed -i -e 's|-march=native||g' build_clang.sh
            UNATTENDED=1 SDK_VERSION="$(echo ${{ matrix.sdk_versions }} | sed 's/-/./g')" bash build.sh
            mkdir -p dist
            tar -zcf dist/osxcross-${{ matrix.sdk_versions }}-linux-amd64.tar.gz -C target .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.collect_sdks.outputs.RELEASE_VERSION }}
          draft: false
          prerelease: false
          append_body: false
          fail_on_unmatched_files: true
          files: |
            dist/*
            tarballs/*
