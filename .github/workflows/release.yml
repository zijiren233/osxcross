name: Release osxcross

on:
  workflow_dispatch:

jobs:
  package_sdks:
    uses: ./.github/workflows/sdk.yml

  collect_sdks:
    name: Collect SDKs
    runs-on: ubuntu-latest
    needs: package_sdks
    outputs:
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get_release_version
        run: |
          echo "RELEASE_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

  build_osxcross:
    name: Build osxcross
    strategy:
      fail-fast: false
      matrix:
        sdk_versions: ${{ fromJSON(needs.package_sdks.outputs.SDK_VERSIONS) }}
        ubuntu_version:
          - 20.04
          - 22.04
    runs-on: ubuntu-${{ matrix.ubuntu_version }}
    needs:
      - package_sdks
      - collect_sdks
    steps:
      - uses: actions/checkout@v4

      - name: Download SDK
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.sdk_versions }}
          path: tarballs

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            curl \
            clang \
            make \
            cmake \
            git \
            patch \
            python3 \
            libssl-dev \
            lzma-dev \
            libxml2-dev \
            xz-utils \
            bzip2 \
            cpio \
            bzip2 \
            zlib1g-dev \
            llvm-dev \
            uuid-dev \
            libtinfo5

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@master
        with:
          version: 18
          directory: ${{ runner.temp }}/llvm

      - name: Symlink libclang.so (Linux)
        run: sudo ln -s libclang-11.so.1 /lib/x86_64-linux-gnu/libclang.so
        working-directory: ${{ env.LLVM_PATH }}/lib

      - name: Build osxcross
        id: build
        run: |
          export PATH=${{ env.LLVM_PATH }}/bin:$PATH
          ls tarballs
          UNATTENDED=1 SDK_VERSION="$(echo ${{ matrix.sdk_versions }} | sed 's/-/./g')" JOBS=$(nproc) bash build.sh
          mkdir -p dist
          tar -zcf dist/osxcross-${{ matrix.sdk_versions }}-linux-amd64-$(echo ${{ matrix.ubuntu_version }} | sed 's/\.//g')).tar.gz -C target .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.collect_sdks.outputs.RELEASE_VERSION }}
          draft: false
          prerelease: false
          append_body: false
          fail_on_unmatched_files: true
          files: |
            dist/*
            tarballs/*
