name: Release osxcross

on:
  workflow_dispatch:
    inputs:
      xcode_version:
        description: "Xcode Version to release"
        type: string
        required: true
  workflow_call:
    inputs:
      xcode_version:
        description: "Xcode Version to release"
        type: string
        required: true

jobs:
  package_sdk:
    name: Package SDK
    runs-on: macos-14
    outputs:
      SDK_VERSIONS: ${{ steps.get_all_sdk_versions.outputs.SDK_VERSIONS }}
    steps:
      - uses: actions/checkout@v4

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ inputs.xcode_version }}

      - name: SDK Package
        run: |
          SDK_COMPRESSOR=xz bash tools/gen_sdk_package.sh
          mv *.tar.xz tarballs/

      - name: Upload SDK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.xcode_version }}-sdk
          path: tarballs

      - name: Get all SDK Versions
        id: get_all_sdk_versions
        run: |
          declare -a arr=()
          for sdk in $(cd tarballs &&ls MacOSX*.tar.xz); do
            sdk_version=$(echo $sdk | sed 's/MacOSX//' | sed 's/.sdk.tar.xz//')
            arr+=("$sdk_version")
          done
          printf -v json '"%s",' "${arr[@]}"
          json="[${json%,}]"
          echo "SDK_VERSIONS=$json" >> $GITHUB_OUTPUT

  build_osxcross:
    name: Build osxcross
    runs-on: ubuntu-latest
    needs:
      - package_sdk
    strategy:
      fail-fast: false
      matrix:
        sdk_versions: ${{ fromJSON(needs.package_sdk.outputs.SDK_VERSIONS) }}
    steps:
      - uses: actions/checkout@v4

      - name: Download SDK
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.xcode_version }}-sdk
          path: tarballs

      - name: Build osxcross
        uses: uraimo/run-on-arch-action@v2
        id: build
        with:
          arch: none
          distro: none
          base_image: amd64/ubuntu:24.04
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/osxcross"
          shell: /bin/bash
          install: |
            apt-get update && apt-get install -y \
              curl \
              clang \
              make \
              cmake \
              git \
              patch \
              python3 \
              libssl-dev \
              lzma-dev \
              libxml2-dev \
              xz-utils \
              bzip2 \
              cpio \
              bzip2 \
              zlib1g-dev \
              bash \
              llvm-dev \
              uuid-dev
          run: |
            cd /osxcross
            sed -i -e 's|-march=native||g' build_clang.sh
            UNATTENDED=1 SDK_VERSION=${{ matrix.sdk_versions }} bash build.sh
            mkdir -p dist
            tar -zcf dist/osxcross-${{ matrix.sdk_versions }}-linux-amd64.tar.gz -C target .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.xcode_version }}
          draft: false
          prerelease: false
          append_body: false
          fail_on_unmatched_files: true
          files: |
            dist/*
