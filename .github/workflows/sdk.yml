name: SDK

on:
  workflow_call:
    inputs:
      macos_version:
        type: string
        required: true
        description: macOS version (12, 13, 14)

jobs:
  package_sdk:
    name: Package SDK
    runs-on: macos-${{ inputs.macos_version }}
    outputs:
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get_release_version
        run: |
          echo "RELEASE_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: SDK Package
        run: |
          xcode-select -p
          xcodebuild -version
          xcodebuild -showsdks
          ls /Applications | grep -v 'Xcode.app' | grep -e 'Xcode.*\.app'
          for xcode in $(ls /Applications | grep -v 'Xcode.app' | grep -e 'Xcode.*\.app'); do
            XCODEDIR=/Applications/$xcode SDK_COMPRESSOR=xz bash tools/gen_sdk_package.sh
          done
          mv *.tar.xz tarballs/

      - name: Upload SDK
        id: upload_sdk
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('npm install @actions/artifact')
            const { DefaultArtifactClient } = require('@actions/artifact');
            const artifact = new DefaultArtifactClient();
            const fs = require('fs');

            const files = fs.readdirSync('tarballs');
            for (const file of files) {
              const name = file.replace(/^MacOSX/, '').replace(/\.sdk\.tar\.xz$/, '').replace('.', '-');
              await artifact.uploadArtifact(
                name,
                ['tarballs/' + file],
                '.',
                {
                  compressionLevel: 0
                }
              );
            }
